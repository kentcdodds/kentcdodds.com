- title: All Things Open 2022 Keynote
  deliveries:
    - event: '[All Things Open](https://www.allthingsopen.org/)'
      date: 2022-11-01
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: ThunderPlains 2022 Keynote
  deliveries:
    - event: '[ThunderPlains](https://thunderplainsconf.com/)'
      date: 2022-10-28
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: infoShare 2022 Keynote
  deliveries:
    - event: '[infoShare](https://infoshare.pl/)'
      date: 2022-10-06
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: React India 2022 Keynote
  deliveries:
    - event: '[React India](https://www.reactindia.io)'
      date: 2022-09-23
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: Infobip Shift 2022 Keynote
  deliveries:
    - event: '[Infobip](https://shift.infobip.com/)'
      date: 2022-09-19
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: ReactNext 2022 Keynote
  deliveries:
    - event: '[ReactNext](https://www.react-next.com/)'
      date: 2022-06-28
  tags:
    - keynote
  description: >-
    This talk is yet to be announced

- title: Bringing Back Progressive Enhancement
  deliveries:
    - event: '[RenderATL](https://www.renderatl.com/)'
      date: 2022-06-01
  tags:
    - keynote
    - remix
    - react
    - html
    - progressive enhancement
  description: >-
    One fun (sometimes frustrating) part of the web is that your application
    must run on countless variations of devices with different configurations,
    screen sizes, and capabilities. Over the years, technology has improved and
    we've been given some really awesome APIs to _enhance_ our applications to
    make them more useful despite the uniquely challenging (and awesome)
    distribution mechanism of the web.


    Unfortunately, when we use these new features of the web platform to
    _enable_ our application, we limit our application's usefulness to the
    trade-offs of those features which has surprisingly negative impacts (even
    if the device itself supports those features).


    In this talk, we're going to learn the true scope of Progressive Enhancement
    and what can be gained by using tools and techiques that allow features of
    the web to _enhance_ your user's exeprience rather than _enable_ it.

- title: Shipping to the Edge
  deliveries:
    - event: '[Reactathon](https://reactathon.com)'
      date: 2022-05-02
      recording: https://youtube.com/watch?v=osSaUWlgAyo&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  tags:
    - keynote
  description: >-
    The landscape of the web has evolved drastically since the first website was
    published to the World Wide Web in 1991. Over the years, the pendulum has
    swung from servers rendering HTML to JavaScript-heavy clients and now it's
    swinging toward something more in the middle.


    What about the web today is enabling us to overcome the shortcomings of the
    web of the past? In this talk, we'll get a little peak into the history of
    each of these stages of the web and what that means for anyone building on
    the web platform in the future.

- title: The Stack of the Future
  deliveries:
    - event: '[React Miami](https://www.reactmiami.com/)'
      date: 2022-04-19
      recording: https://www.youtube.com/watch?v=AI-5dHnnyiA&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  tags:
    - keynote
  description: >-
    When a brilliant idea strikes, you want to hit the ground running and focus
    on building out your idea. Unfortunately, for any ambitious project, it
    takes a significant amount of time configuring the tools you'll ultimately
    need to make your idea a reality. Far too often we either under prepare and
    our MVP-shortcuts end up being a pain in the neck for the next few years if
    we're successful, or we spend so much time in the setup process that we lose
    all motivation.


    In this talk, I'll show you how Remix can help you get started with a solid
    foundation so you can focus on building out your ideas. And when your MVP
    turns into a money maker, you won't feel like you have to rewrite your app
    from scratch! And for those of you starting new projects from scratch on a
    regular basis, I'll show you how you can make your own Remix stack to create
    these projects just like you want them again and again.

- title: Server-side Auth with Remix, Prisma, and the Web Platform
  deliveries:
    - event: '[Node Congress](https://nodecongress.com/)'
      date: 2022-02-17
    - event: '[Node TLV](https://www.nodetlv.com/)'
      date: 2022-06-29
  tags:
    - keynote
    - remix
    - prisma
  description: >-
    In this talk, we'll get a live coded demo of building custom hand-rolled
    authentication. When you have the right tools (and we do), authentication
    can be quite simple and secure. This is more (and better) than just:
    "Install this library and you're good to go." When we're done we'll have our
    own auth code that can evolve with our ever-changing requirements without a
    need to learn some library-specific APIs. We'll be leveraging the Web
    Platform the way it was meant to be done to give us simple and secure
    server-side authentication for the web.

- title: Developing a Remix app... Offline
  tags:
    - react
    - msw
    - docker
  description: >-
    I love riding my onewheel up to the mountains where there's no internet/cell
    service and working on my app. But my app uses tons of 3rd party services
    and two databases to get things done. In this talk I'll walk you through how
    I manage to still work offline and enjoy nature!
  deliveries:
    - event: '[Remix Utah](https://www.meetup.com/remix-utah/events/283702057)'
      date: 2022-03-03
      recording: 'https://www.youtube.com/watch?v=4pBKWRjwCgE&t=1814&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'

- title: Building Excellent User Experiences with Remix
  tags:
    - react
    - remix
  description: >-
    Remix is a Web Framework that uses the web platform to enable you to build
    excellent user experiences. In this talk I'm going to show you what makes
    Remix so special and how the user experiences you build with Remix are
    excellent by default.
  deliveries:
    - event:
        '[React Denver](https://www.meetup.com/ReactDenver/events/282107884/)'
      date: 2021-12-21
      recording: https://www.youtube.com/watch?v=tAHVmkHOr_w&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf&t=485
    - event: '[React Wednesdays](https://www.telerik.com/react-wednesdays)'
      date: 2022-01-05
      recording: https://www.youtube.com/watch?v=QgY49LCD8jQ&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[YYC.js](https://www.meetup.com/yyc-js/events/282715530/)'
      date: 2022-01-12
      recording: https://www.youtube.com/watch?v=EwVoHu0dgfg&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event:
        '[iO Frontend
        Meetup](https://www.meetup.com/nl-NL/Frontmen/events/282800242/)'
      date: 2022-01-19
      recording: https://www.youtube.com/watch?v=r2Gks2qm0AY&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event:
        '[Remix Mexico
        Meetup](https://www.meetup.com/remix-mexico/events/283201668/)'
      date: 2022-01-19
    - event:
        '[Cincinnati Software
        Craftsmanship](https://www.meetup.com/Cincinnati-Software-Craftsmanship/events/282695621/)'
      date: 2022-02-02
      recording: 'https://www.youtube.com/watch?v=KoSoLRlya9U&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event:
        '[Gorrion
        Unplugged](https://www.youtube.com/channel/UCAQI4x8pKnnTZRmE1Rj1V7w)'
      date: 2022-02-10
      recording: 'https://www.youtube.com/watch?v=T0aigxxfGrc&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event: '[XTSummit](https://xtsummit.com/)'
      date: 2022-02-18
    - event:
        '[Remix
        Uppsala](https://www.meetup.com/remix_run-uppsala/events/283688341)'
      date: 2022-03-01
      recording: 'https://www.youtube.com/watch?v=_lEYvuRG130&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event:
        '[Remix London](https://www.meetup.com/remix-london/events/283361856)'
      date: 2022-03-02
      recording: 'https://www.youtube.com/watch?v=r6sDMntthms&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event: 'Farfetch Webinar'
      date: 2022-03-04
    - event:
        '[JavaScript
        Marathon](https://labs.thisdot.co/resources/Remix-with-Kent-C-Dodds)'
      date: 2022-03-14
      recording: 'https://youtube.com/watch?v=cEngdGLw5qM&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event: '[CharlestonJS](https://www.meetup.com/nl-NL/CharlestonJS/events/283033703)'
      date: 2022-03-17
    - event:
        '[Remix Bay
        Area](https://www.meetup.com/remix-bay-area/events/283836050)'
      date: 2022-03-22
      recording: 'https://www.youtube.com/watch?v=Cwwr9yFBHnA&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event:
        '[Applitools
        webinar](https://applitools.com/excellent-ux-with-remix-webinar)'
      date: 2022-03-23
      recording: 'https://youtube.com/watch?v=xl-8VgF8wH4&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf'
    - event: 'Austin Software Tech Talk'
      date: 2022-03-23
    - event:
        '[Shop Apotheke Technology
        Summit](https://shop-apotheke-technology-summit.com/)'
      date: 2022-03-31
    - event: '[Brum.js](https://brum.js.org)'
      date: 2022-03-31
    - event: 'Tesla Frontend Meetup'
      date: 2022-04-01
    - event: 'Code for Ukraine Tech Beetup #3'
      date: 2022-04-13

- title: The Power of Forms
  resources:
    - '[repo](https://github.com/kentcdodds/form-seas)'
  deliveries:
    - event: '[Holiday Snowtacular](https://www.twitch.tv/TrostCodes)'
      date: 2021-12-17
      recording: 'https://www.youtube.com/watch?v=8GTeh9K52b8'
    - event: '[Remix Utah](https://www.meetup.com/remix-utah/events/282462790)'
      date: 2022-01-06
      recording: 'https://www.youtube.com/watch?v=Ax9iVzTTpSM&start=1195&end=2580'
    - event:
        '[Remix India
        Online](https://www.meetup.com/remix-india-online/events/282827944)'
      date: 2022-01-11
      recording: 'https://www.youtube.com/watch?v=5xBndUop8CE&start=103&end=1473'
  tags:
    - remix
  description: >-
    The web has been able to do mutations for a really long time and we've been
    `preventDefault`-ing in our JavaScript SPAs. But if you build your backend
    to support both the `fetch`-submit type of form submission as well as the
    default behavior, then you can make your app work without JavaScript or
    before the JavaScript has finished loading! Let's explore how Remix makes
    this possible.

- title: Remix and Progressive Enhancement
  deliveries:
    - event: '[Remix Utah](https://www.meetup.com/remix-utah/events/282031168)'
      date: 2021-12-02
      recording: 'https://www.youtube.com/watch?v=YD3U6jo9epY'
  tags:
    - remix
  description: >-
    We like to talk about how Remix sites work well without JavaScript in the
    browser, but there's gotta be a reason to ship some JavaScript right? In
    this talk, I'll show you the amazing things you can do once you have
    JavaScript on the client. Progressive enhancement FTW!

- title: How I Built a Modern Website in 2021
  deliveries:
    - event: '[Utah JS Conf](https://utahjs.com/)'
      date: 2021-10-08
      recording: https://www.youtube.com/watch?v=owOZMwNPAyc&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event:
        '[Agent Conf 2022](https://www.alpine-conferences.com/agent-conf-2022/)'
      date: 2022-01-27
  tags:
    - keynote
    - react
  description: >-
    I just released a complete rewrite of my website. This isn't your regular
    developer blog though. You can actually log in, record some audio for a
    podcast, choose a "team" to be a part of, connect with discord, and much
    more. I'm using some of the coolest modern tech around including React,
    Remix, Prisma, Postgres, Redis, Fly.io, tailwind, TypeScript, and more!


    I want to take you on a tour of some of the highlights and talk about some
    of the problems I faced and decisions I had to make while building a brand
    new modern website in 2021.

- title: Super Simple Start to Remix
  deliveries:
    - event: '[Connect.tech](https://connect.tech/)'
      date: 2021-11-08
      recording: https://www.youtube.com/watch?v=zyz4PR6RG0U&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Remix has me more excited about building better websites than anything else
    since I started using React back in 2015. I have so much to say about it,
    but for this blog post, we're going to remove as many distractions as
    possible and give remix the "super simple start" treatment. So, even though
    Remix has a fancy npm init remix thing you can run (which is much easier
    than what I'm going to show you), we're going to skip that and build a
    simple remix app from absolutely nothing to running so we can inspect each
    bit required to get it going.

- title: Don't Solve Problems, Eliminate Them
  resources:
    - '[blog
      post](https://kentcdodds.com/blog/don-t-solve-problems-eliminate-them)'
  tags:
    - keynote
    - career
    - software
  deliveries:
    - event: '[Shift Dev Conf 2021](https://shift.infobip.com/)'
      date: 2021-09-07
      recording: https://www.youtube.com/watch?v=EETYrR8TOoc&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[React Advanced London](https://reactadvanced.com)'
      date: 2021-10-22
      recording: https://www.youtube.com/watch?v=SMJKUHNrPng&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[Connect.tech](https://connect.tech/)'
      date: 2021-11-08
      recording: https://www.youtube.com/watch?v=yE_PlrvF4OA&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Humans are natural problem solvers and we're good enough at it that we've
    survived over the centuries and become the dominant species of the planet.
    Because we're so good at it, we sometimes become problem seekers too–looking
    for problems we can solve. Those who most successfully accomplish their
    goals are the problem eliminators. Let's talk about the distinction between
    solving and eliminating problems with examples from inside and outside the
    coding world.
- title: Practically Testing
  resources:
    - '[slides](https://github.com/kentcdodds/practically-testing-slides)'
  tags:
    - testing
  deliveries:
    - event: '[Frontend Test Fest](https://frontendtestfest.com/)'
      date: 2021-06-08
      recording: https://www.youtube.com/watch?v=_mHy9U0jAG0&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    This talk is about how testing uses the same currency as everything else we
    do for the product: our time. And we need to decide how much time we invest
    relative to the ROI of everything else we can do.

- title: Testing Library
  resources:
    - '[repo](https://github.com/kentcdodds/testing-react-apps)'
  tags:
    - react
    - testing
  deliveries:
    - event:
        '[React Wednesdays All Day
        Edition](https://www.telerik.com/react-wednesdays-all-day-edition)'
      date: 2021-06-02
      recording: https://www.youtube.com/watch?v=sVMv3H7x8ew&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    This should be a fun one, as Kent C. Dodds
    ([@kentcdodds](https://twitter.com/kentcdodds)) is joining us to talk us
    about Testing Library, and to give us a live demo. You should bring fun
    questions, like, how did you come up with the name Testing Library? Maybe
    bring some real questions too, as Testing Library is a pretty powerful
    library you're probably using in production.

- title: Managing State Management
  resources:
    - '[slides](https://github.com/kentcdodds/managing-state-management-slides)'
  tags:
    - react
    - state
  deliveries:
    - event: React Rally
      date: 2020-08-14
      recording: https://www.youtube.com/watch?v=ZguCD2Flx14&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: Reactathon
      date: 2020-12-08
      recording: https://youtu.be/pkNzU-5oDiA?t=3890&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Application State Management is one of the hardest parts of building and
    maintaining React Applications. The number of options you have is numerous
    and the reason is that it's just such a hard problem with so many nuances
    and trade-offs. One thing that makes application state management harder is
    when we aren't thoughtful about how that state is organized and categorized
    in our app. There are different kinds of state and they require different
    approaches for management. When you try to treat all app state exactly the
    same is when problems come into play.


    Let's talk about what some of those categories are and how we can
    drastically simplify our application code and improve our app's performance
    by thinking about and organizing our state differently.

- title: Consume ➡️ Build ➡️ Teach
  resources:
    - '[slides](https://slides.com/kentcdodds/consume-build-teach)'
  tags:
    - career
    - keynote
  deliveries:
    - event: '[React Summit](https://reactsummit.com/)'
      date: 2020-10-15
      recording: https://www.youtube.com/watch?v=yUcd_gXByoQ&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    How do you level up? How do you jumpstart your learning when getting into
    something new? Nobody has more than 24 hours a day, so how do you maximize
    the impact of your limited time?


    In this keynote, I'm going to tell you a bit of my own story, and some tips
    and tricks that I've learned so you can be as productive as you can be at
    learning new things and solidifying that knowledge so it's there when you
    need it.

- title: Building the Open Source Community We Want
  resources:
    - "[slides](https://drive.google.com/open?id=1-kpw_RlWNjzGcV4E69KlsOktbCru6\
      LFx)"
  tags:
    - open source
  deliveries:
    - event:
        '[All Things Open 2019](https://allthingsopen.org/speakers/kent-c-dodds)'
      date: 2019-10-13
      recording: https://www.youtube.com/watch?v=OGeoH-sqePE&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    What kind of world do you want to live in? The world of Open Source Software
    is supremely vast, and it's growing. We can't sit idly by, coding alone in
    our closets with an attitude of "if you want something done right, you have
    to do it yourself." We don't want to live in a world like that. The
    community we want to build around OSS requires intentional effort to
    maximize the happiness of everyone involved. And the rewards of working
    toward that goal are serene. I'd like to personally welcome you to the open
    source community. Bring your distinctiveness and help to make our world a
    better place.

- title: AHA Programming
  resources:
    - '[slides](https://github.com/kentcdodds/aha-programming-slides)'
  tags:
    - software development
    - abstraction
    - keynote
  deliveries:
    - event: '[Concatenate Conf](https://www.concatenate.dev)'
      date: 2019-10-11
      recording: https://youtu.be/-Ez53J0vj9c?t=18077
    - event: '[Connect.Tech](https://connect.tech)'
      date: 2019-10-16
    - event: '[React Summit](https://remote.reactsummit.com/)'
      date: 2020-04-17
      recording: https://www.youtube.com/watch?v=wuVy7rwkCfc&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Are you the kind of programmer who prefers to never see the same code in two
    places, or do you make liberal use of copy/paste? Many developers swear by
    the Don't Repeat Yourself (DRY) philosophy while others prefer to Write
    Everything Twice (WET). But which of these produces more maintainable
    codebases? I've seen both of these approaches lay waste to codebases and I
    have a new ideology I would like to propose to you: Avoid Hasty Abstractions
    (AHA). In this keynote, we'll talk about abstraction and how you can improve
    a codebase by applying and creating abstractions more thoughtfully as well
    as how to get yourself out of a mess of over or under-abstraction.

- title: Application State Management
  resources:
    - '[slides](https://github.com/kentcdodds/application-state-management-talk)'
  tags:
    - react
  deliveries:
    - event: '[Reactadelphia](https://www.meetup.com/Reactadelphia/events/264461785/)'
      date: 2019-09-17
  description: >-
    For the last few years of using React, we as a community have been trying to
    solve the hard problem of application state management with React when we
    already had one all along. React itself is a state management library.


    You can use features and practices that have been a part of React for a long
    time and it will change the way you think about state management for your
    React apps. In other words: you probably don't need Redux, MobX, or any
    state management library other than React. Let's explore how that's possible
    and why you might want to think twice before reaching for an abstraction.

- title: React Hook Pitfalls
  resources:
    - '[slides](https://github.com/kentcdodds/react-hooks-pitfalls)'
  tags:
    - react
  deliveries:
    - event: '[React Rally 2019](https://www.reactrally.com)'
      date: 2019-08-22
      recording: https://www.youtube.com/watch?v=VIRcX2X7EUk&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    The hooks honeymoon phase is over. We were able to overlook our confusion as
    a reasonable familiarity issue, but now it's time to get real about the
    pitfalls of React Hooks. Hooks lead to a better user experience and fewer
    bugs for sure, but without the right foundational understanding of them and
    certain JavaScript semantics, we'll probably cause other problems in the
    process of using hooks.


    In this talk, we'll explore some of the gotchas of using hooks, why those
    things are problems, and how to think about hooks so we develop an intuition
    for how to use hooks while avoiding the pitfalls.

- title: Testing Implementation Details
  resources:
    - '[codesandbox](https://codesandbox.io/s/react-codesandbox-6cd4i)'
  tags:
    - testing
    - react
  deliveries:
    - event: "[React Ottawa
        Meetup](https://www.meetup.com/Ottawa-ReactJS-Meetup/events/260941602/?\
        _xtd=gqFyqTIxNzkwMTQzM6FwpmlwaG9uZQ&from=ref)"
      date: 2019-05-30
      recording: https://youtu.be/-FxVK5mOewQ?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    This is basically the talk version of my blog post [Testing Implementation
    Details](https://kcd.im/imp-deets).

- title: Requisite React
  resources:
    - '[slides](https://github.com/kentcdodds/requisite-react)'
  tags:
    - react
  deliveries:
    - event: '[React.Amsterdam](https://react.amsterdam)'
      recording: https://youtu.be/tO8qHlr6Wqg?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
      date: 2019-04-12
  description: >-
    React  is a brilliant JavaScript library for building simple and complex
    user interfaces. In our eagerness to apply  React  to our most complex of
    problems and ship solutions today, we can get lost in the 🌲🌲🌲 forest of
    abstractions 🌲🌲🌲. When it comes to leveling up our skills in anything, I
    find the most effective method is to take a step back and understand the
    foundational fundamentals. To strip away all abstraction until what we're
    left with is the bare bones. [The better you understand an abstraction, the
    more effective you will be at using
    it.](https://twitter.com/kentcdodds/status/1074724545003581440) In this
    talk, we'll get more effective at using React Hooks, React Suspense, and
    JSX.

- title: LIVE! Learn React Hooks with Kent C. Dodds
  resources:
    - '[Partially Finished Codesandbox](https://codesandbox.io/s/r1m6pz58mq)'
    - '[Fully Finished Codesandbox](https://codesandbox.io/s/l3r6zxx0vl)'
  tags:
    - react
  deliveries:
    - event: "[Webinar
        Registration](https://zoom.us/webinar/register/5015513098499/WN_jT_uHTT\
        xQ5yI047qzGw4MA)"
      date: 2019-03-06
      recording: https://egghead.io/lessons/react-using-react-hooks-to-build-a-tic-tac-toe-game-with-kent-c-dodds
  description: >-
    There's a lot of chatter about React Hooks. They really change the game, but
    they are also a totally new mind-bending approach in some cases. In this
    webinar, I'll go over what React Hooks are, why they're useful, and demo
    what you can do with them.

- title: LIVE! Understanding React Testing Library internals
  tags:
    - react
    - testing
  deliveries:
    - event: egghead.io Webinar
      date: 2019-02-27
      recording: https://egghead.io/lessons/react-understanding-how-react-testing-library-works-with-kent-c-dodds

- title: Contributing to Open Source on GitHub for beginners
  resources:
    - '[repo](https://github.com/eggheadio-github/stack-overflow-copy-paste)'
    - "[course](https://egghead.io/courses/how-to-contribute-to-an-open-source-\
      project-on-github)"
  tags:
    - open source
  deliveries:
    - event: BYU Presentation
      date: 2018-12-06
      recording: https://youtu.be/k6KcaMffxac?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjsh
  description:
    Let's talk about contributing to open source. In this talk, we'll go through
    the process of contributing to an open source project on GitHub.

- title: Why React Hooks
  resources:
    - '[repo](https://github.com/kentcdodds/gdg-devfest-2018-react)'
    - '[chat app](https://geo-chat.netlify.com)'
  tags:
    - react
  deliveries:
    - event:
        '[GDG Salt Lake DevFest
        2018](https://sites.google.com/view/gdgsaltlakedevfest2018)'
      date: 2018-11-17
      recording: https://youtu.be/zWsZcBiwgVE?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event:
        '[ReactKHI Meetup #3](https://www.facebook.com/events/312802822683639)'
      date: 2019-01-26
    - event:
        '[RVA.js Meetup](https://www.meetup.com/rva-js/events/jrgfhpyzdbhb)'
      date: 2019-02-12
    - event: '[Connect.Tech](https://connect.tech)'
      date: 2019-10-16
      recording: https://www.recallact.com/presentation/why-react-hooks
  description: >-
    In October, the React team announced a new feature coming 🔜 to React called
    "hooks." In this talk we'll go over what this feature is and why this
    feature is necessary. We'll also see a real-world example of an application
    that uses React hooks.

- title: A Render Prop by Any Other Name
  tags:
    - react
    - vue
    - angular
  deliveries:
    - event: '[Framework Summit](https://www.frameworksummit.com/sessions)'
      date: 2018-10-02
      recording: https://www.youtube.com/watch?v=pjDOJdMM2eg
  description: >-
    Can Vue use Render Props? Does React have a concept like Directives? Can
    Angular go Renderless the way the young 'uns do? All my developer friends in
    that other framework keep using words I don't understand. Help! Join Kent C.
    Dodds, Isaac Mann and Divya Sasidharan as they demonstrate UI component
    patterns that are common across React, Angular and Vue. Consider this your
    language primer before a trip to a foreign framework land. You'll see that
    we're all talking about the same concepts, even when we use different words.

- title: React... Suspense...
  resources:
    - '[repo](https://github.com/kentcdodds/react-suspense-simple-example)'
  tags:
    - react
  deliveries:
    - event:
        '[SLC Frontend
        Meetup](https://www.meetup.com/SLC-FE-DEV/events/254256621)'
      date: 2018-09-25
      recording: https://youtu.be/7LmrS2sdMlo?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    React Suspense is coming and it's going to be awesome. It's currently in
    alpha and you can play around with it. In this talk we'll focus on the
    fundamentals of how React Suspense works.

- title: Simply React
  resources:
    - '[slides](https://simply-react.netlify.com)'
  tags:
    - react
  deliveries:
    - event: Practice Run
      date: 2018-06-01
      recording: https://youtu.be/PJe8KXPw4cA?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: JS@PayPal (internal conference)
      date: 2018-05-10
    - event: '[Open West 2018](https://www.openwest.org)'
      date: 2018-06-08
      recording: https://youtu.be/Q25lkYUZTMU?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[Chain React](https://infinite.red/ChainReactConf)'
      date: 2018-07-12
      recording: https://youtu.be/M9X2qGddHkU?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[React Rally 2018](https://2018.reactrally.com)'
      date: 2018-08-16
      recording: https://youtu.be/AiJ8tRRH0f8?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[Byteconf React 2020](https://www.bytesized.xyz/react-2020)'
      date: 2020-04-01
      recording: https://www.youtube.com/watch?v=5io81WLgXtg&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    One of the things I love about React is how easy it is to encapsulate UI
    code into a component. I love this because it makes reuse of those
    components easy. But is it easy? I've made my fair share of components that
    had to accept a bunch of props to handle a growing list of different use
    cases resulting in a complex render function full of conditional statements
    and a confusing API for people using this "reusable" component. Eventually
    it becomes too much and I had to make a new version of the same component to
    handle slightly different use cases. Lots of code/bug duplication there
    because my reusable component wasn't reusable enough.


    There are patterns that have emerged in React that allow you to promote code
    reuse without sacrificing the simplicity or flexibility of the component. In
    this talk we'll go over 5 of these patterns that will make your React
    components more useful.

- title: Confident React
  resources:
    - '[slides](https://slides.com/kentcdodds/confident-react)'
    - "[example
      codesandbox](https://codesandbox.io/s/github/kentcdodds/confident-react-e\
      xamples)"
    - "[react-testing-library-examples
      codesandbox](https://codesandbox.io/s/github/kentcdodds/react-testing-lib\
      rary-examples)"
  tags:
    - react
    - testing
  deliveries:
    - event: JS@PayPal (internal conference)
      date: 2018-05-10
      recording: https://youtu.be/qXRPHRgcXJ0?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[egghead.io](http://kcd.im/egghead)'
      date: 2018-06-14
      recording: https://egghead.io/lessons/react-confidently-ship-production-react-apps
    - event: '[ByteConf](https://byteconf.com)'
      date: 2018-08-31
    - event: YYC Dev
      date: 2020-09-15
  description: >-
    We want to make sure that when we ship new code, our users can use the
    application. The best way we've found to do that is to write automated tests
    that run before we deploy a new version of the app. But if our tests aren't
    doing exactly what the user will do, then how do we really know that things
    will work when users interact with our apps? Let's rethink what it means to
    ship applications with confidence and what it takes to get there. With
    improved tools and practices, we can be more certain that what we're
    shipping to our users will work the way it's intended.

- title: PayPal and Node Tooling
  tags:
    - node
    - keynote
  deliveries:
    - event: JS@PayPal (internal conference)
      date: 2018-05-10
  description: >-
    This is a keynote at JS@PayPal about how PayPal is investing in JavaScript,
    NodeJS, and tooling.
- title: How to React
  resources:
    - '[slides](http://kcd.im/how-to-react-slides)'
    - '[blog](http://kcd.im/how-to-react)'
  tags:
    - react
  deliveries:
    - event:
        '[React Dev Summit](https://devchat.tv/event/react-dev-summit-2018)'
      date: 2018-03-30
    - event: '[Open West 2018](https://www.openwest.org)'
      date: 2018-06-08
  description: >-
    Learning React can be confusing. React is a library, but even more than
    that, React is an ecosystem of tools that you piece together to create a
    program. This is a powerful property of the React community, however that
    ecosystem can be frustratingly distracting when you're a newcomer trying to
    get your feet wet. The key to avoiding this frustration and confusion is to
    learn React (and its ecosystem) in the right order.


    In this talk, we'll go over what that order is and give a roadmap so you can
    have a vision of where you're going. Let's learn how to React!

- title: How open source has made me and the stuff I make better
  resources:
    - '[slides](https://slides.com/kentcdodds/oss-better#)'
  tags:
    - open source
  deliveries:
    - event: '[KnowJS](https://certifiedfreshevents.com/events/knowjs-2018)'
      date: 2018-04-13
      recording: https://www.youtube.com/watch?v=6mtPPkKchcQ&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    The open source community and ecosystem have made me a better software
    developer and helped me develop better software. I get to see how other
    people work. Other people get to see how I work. It encourages me to put
    forth my best effort, think critically about the software I'm creating, and
    ensure it has great documentation. It's also easier to develop software in
    an isolated environment like an open source project.


    In this talk, we'll see how open source can help improve your skills and
    improve the software that you create. This makes you a much more skilled,
    marketable, and gives you work that you can share with the public and
    contribute to the open source ecosystem.

- title: All about macros with babel-plugin-macros 🎣
  resources:
    - '[slides](http://slides.com/kentcdodds/macros)'
  tags:
    - babel
  deliveries:
    - event:
        '[ReactJS Utah](https://www.meetup.com/ReactJS-Utah/events/246683120)'
      date: 2018-01-31
      recording: https://youtu.be/nlAHtAQlFGk?t=2s&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf&index=1
  description:
    Customize babel without configuration or ejecting from create-react-app

- title: Write tests. Not too many. Mostly integration.
  resources:
    - '[slides](https://slides.com/kentcdodds/write-tests)'
  tags:
    - testing
  deliveries:
    - event:
        '[UtahJS Orem Meetup](https://www.meetup.com/UtahJS/events/246047733)'
      date: 2018-01-04
      recording: https://youtu.be/10jYq_d8fks?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event:
        '[UtahJS SLC Meetup](https://www.meetup.com/UtahJS/events/244852066)'
      date: 2017-11-21
    - event: '[Assert(JS)](https://www.assertjs.com)'
      date: 2018-02-22
      recording: https://youtu.be/Fha2bVoC8SE?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Automated tests are an important part of raising your confidence when
    releasing software. They can speed you up or slow you down depending on how
    you write them and which form of testing you focus your test writing on.


    In this talk, we'll cover the value of automated testing and where your
    efforts should be focused to strike the best balance of confidence and
    effort.

- title: The introduction to React you've been missing
  resources:
    - "[The Beginner's guide to ReactJS
      ⚛️](https://egghead.io/courses/the-beginner-s-guide-to-reactjs)"
  tags:
    - react
    - jsx
    - intro
  deliveries:
    - event: '[UtahJS Conf](https://conf.utahjs.com)'
      date: 2018-09-14
    - event:
        '[UtahJS SLC Meetup](https://www.meetup.com/UtahJS/events/245220227)'
      date: 2017-12-19
      recording: https://youtu.be/pugPxYH96TU?t=2276s&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    In this talk I teach React from scratch in a single `index.html` file with
    no magic up my sleeves. We start with a basic Hello World in vanilla
    JavaScript and incrementally iterate through React APIs and JSX. We continue
    with introducing more of React's APIs.

- title: Maintainable CSS in React
  resources:
    - '[slides](http://slides.com/kentcdodds/glamorous#)'
  tags:
    - glamorous
    - css
    - css-in-js
    - react
  deliveries:
    - event: JS@PayPal Summer 2017 (internal conference)
      date: 2017-07-20
      recording: https://youtu.be/3-4KsXPO2Q4?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[ReactNYC](https://www.meetup.com/ReactNYC/events/239324528)'
      date: 2017-06-22
      recording: https://youtu.be/R1_nGU0x3Wk?t=21s&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf&index=3
  description: >-
    I no longer care about: specificity, CSS linters, CSS preprocessors, vendor
    prefixing, removing unused CSS, finding CSS dependencies and dependents. I
    now care more about: whether it's fast enough, whether it's small enough,
    whether it's familiar enough. These are some of my trade-offs. Because I use
    CSS-in-JS. I've made trade-offs because I write HTML-in-JS. Despite these, I
    still do it, because the cost is minimal enough, and the benefit is great
    enough. Let's tell stories, talk use-cases, explore trade-offs, and inspire
    more innovation to make the CSS-in-JS trade-offs less trade-offy.

- title: Tools of modern JavaScript projects
  resources:
    - '[slides](http://slides.com/kentcdodds/js-tools#)'
  tags:
    - javascript
    - tools
  deliveries:
    - event: '[Open West 2017](https://www.openwest.org)'
      date: 2017-07-13
  description: >-
    The cry of JavaScript fatigue still echoes in the minds of developers
    everywhere as they try to wade through the waters of outdated blog posts,
    tutorials, Stack Overflow answers, and GitHub repos. Just when things seem
    to start settling in JavaScript, something new comes to shake things up a
    little bit. I'll be you tour guide as we navigate through the tooling set up
    of a modern JavaScript project that's leveraging these tools in a way that
    actually enhances the experience of users using the project and developers
    working on it.

- title: Faster JavaScript
  resources:
    - '[slides](https://slides.com/kentcdodds/faster-javascript)'
  tags:
    - javascript
    - babel
  deliveries:
    - event:
        '[JS Remote Conf](https://devchat.tv/conferences/js-remote-conf-2017)'
      date: 2017-03-16
      recording: https://youtu.be/enlfQRUXb-s?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[UtahJS meetup](https://www.meetup.com/UtahJS/events/234009949)'
      date: 2016-11-03
      recording: https://youtu.be/kI_OiAUFLkQ
  description: >-
    The more code you have, the more problems you have. One of these is the
    ability to learn the code. Code often has logic to handle edge cases which
    can distract a new contributor from the core logic of the code, making it
    challenging to learn. Another one of the problems with more code that's
    specific to JavaScript and the browser is the more you send over the wire to
    the browser, the slower it goes. This is due to network latency primarily,
    but also parsing, evaluating, and keeping relevant variables in memory.


    With a really interesting technique called [program
    slicing](https://en.wikipedia.org/wiki/Program_slicing), we can build tools
    to help to mitigate some of these problems. In this talk, I'm going to give
    you a peek at a tool I've been working on called `slice-js` 🍕. I'm super
    excited about the implications for a project like this!

- title: How to Open Source Your Stuff
  resources:
    - '[slides](https://slides.com/kentcdodds/open-sourcing-your-stuff)'
    - '[repo 1](https://github.com/kentcdodds/todomvc-angular)'
    - '[repo 2](https://github.com/angular-todo-mvc/angular-todo-escape)'
  tags:
    - open source
    - live coding
  deliveries:
    - event: '[Angular Remote Conf](http://angularremoteconf.com)'
      recording: https://youtu.be/Zlu3QvuwruY
      date: 2015-09-01
    - event: JS@PayPal
      date: 2015-12-16
    - event:
        '[All Things
        Open](https://allthingsopen.org/talk/how-to-open-source-your-stuff)'
      date: 2016-10-27
    - event: '[KnowJS](https://certifiedfreshevents.com/events/knowjs-2018)'
      date: 2018-04-13
  description: >-
    Building things so they work well in isolation, then piece them together to
    make the full application makes building applications easier. One thing that
    really helps with this kind of strategy is to open source your stuff. In
    this talk, we'll take a look at an existing application, identify a good
    candidate component for open sourcing, and then go through the process of
    creating an open source project for that component and add it as a project
    dependency. By the end that component of the application will be easier to
    work on and contribute to and we'll also have it open for the rest of the
    world to contribute and improve the software which once had bugs that were
    just as private as the original project repository.

- title: Managing an Open Source Project
  resources:
    - '[video](https://youtu.be/jKI1Kj5VXqE) (practice run at a meetup)'
    - '[slides](https://kcd.im/manage-oss)'
  tags:
    - open source
    - soft skills
  deliveries:
    - event: '[Space City JS](http://spacecity.codes)'
      date: 2016-05-14
    - event:
        '[All Things
        Open](https://allthingsopen.org/talk/managing-an-open-source-project)'
      date: 2016-10-27
    - event: '[UtahJS Conf](https://conf.utahjs.com/)'
      date: 2019-09-20
    - event:
        '[All Things
        Open](https://allthingsopen.org/talk/managing-an-open-source-project)'
      date: 2019-10-15
      recording: https://www.youtube.com/watch?v=zCJyiBu12Jw&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
  description: >-
    Awesome! You've made it big! You've published an open source project and
    people are actually using it to make the world a better place. Achievement
    unlocked! Great job! But wait... what's this? An issue? Oh, it's just a bug.
    Pretty quick and easy. Fixed, released, done, #likeaboss 😎. What's this? A
    PR? How cool! Wait... That's not quite right... Oh, a question! Cool! And
    another! And another... eh... and another... Uh oh... You think you've just
    sold your soul to this project.


    You start an open source project to scratch your own itch and suddenly other
    people start using it and they need your help. This can easily start eating
    up your time big time and before you know it, your kids/dogs start feeling
    neglected.


    I've had to deal with this in a few projects and I've learned a thing or two
    about work/life/oss balance. I have a few tricks that help you make the
    project manage itself a bit more while still being friendly and helpful to
    users of the project. Let's chat.

- title: Testing React
  resources:
    - '[slides](https://kcd.im/react-jest)'
    - '[react-jest-workshop](https://github.com/kentcdodds/react-jest-workshop)'
    - '[old slides (mocha)](https://kcd.im/testing-react)'
    - "[react-mocha-workshop](https://github.com/kentcdodds/react-mocha-worksho\
      p)"
    - '[older slides (ava)](https://kcd.im/react-ava)'
    - '[react-ava-workshop](https://github.com/kentcdodds/react-ava-workshop)'
  tags:
    - react
    - testing
    - live coding
  deliveries:
    - event: '[Connect.tech](http://connect.tech)'
      date: 2016-10-21
    - event: JS@PayPal
      date: 2016-09-23
    - event: '[MidwestJS](http://midwestjs.com)'
      date: 2016-08-11
  description: >-
    I hope you're excited about testing! We all know we need to get testing
    better, but it can be really hard to know how and what to test. We'll learn
    about the four inputs to React components (user input, props, data, and
    context) and how to test for each of them. You'll discover that if you
    slightly modify the way you're writing your components, you can make them
    much easier to test. We'll be using the new super fast, simple, and feature
    full Jest testing framework with enzyme and snapshot testing. I hope you
    like code. You're gonna see some here!

- title: More than you want to know about ES6 Modules
  resources:
    - '[slides](https://slides.com/kentcdodds/es6-modules)'
  tags:
    - ES6
    - babel
  deliveries:
    - event: '[MidwestJS](http://midwestjs.com)'
      date: 2016-08-12
    - event: JS@PayPal
      recording: https://youtu.be/V0YQ0rnh-Hg
      date: 2016-09-23
    - event:
        '[JavaScript KC
        Meetup](https://www.meetup.com/JavaScriptKC/events/231844450)'
      recording: https://youtu.be/qi_rLTcXers
      date: 2016-06-21
    - event: "[Modern Web Remote
        Meetup](https://www.bigmarker.com/modernweb/ES6-Modules-Mastering-Chrom\
        e-Developer-Tools-and-more) (video on the event page)"
      date: 2016-03-19
  description: >-
    ES6 Modules have been standardized and many have already started using them.
    They have a lot of benefits over CommonJS, AMD, and Globals.


    Unfortunately, there are many ways to deal with modules with this new syntax
    and it can be a bit confusing. In this talk, we'll explore the different
    ways you can use the new syntax and when you'd use the different methods.
    We'll also investigate what's going on at a high level. Buckle up for a
    firehose of ES6 information.

- title: Writing custom Babel and ESLint plugins with ASTs
  resources:
    - '[slides](https://slides.com/kentcdodds/a-beginners-guide-to-asts)'
    - '[code](http://kcd.im/beginner-asts-code)'
  tags:
    - ECMAScript
    - babel
    - eslint
    - live coding
  deliveries:
    - event:
        '[PDXNode Meetup](https://www.meetup.com/pdxnode/events/dcvjdnywnbqb/)'
      date: 2017-10-12
      recording: https://www.youtube.com/watch?v=VicU_XwriWw&list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: '[Open West 2017](https://www.openwest.org/schedule/#talk-99)'
      date: 2017-07-13
      recording: https://youtu.be/VBscbcm2Mok?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
    - event: Clevertech Engineering
      recording: https://youtu.be/CFQBHy8RCpg?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
      date: 2017-01-14
    - event: '[JS Remote Conf](https://allremoteconfs.com/js-2016)'
      date: 2016-01-14
    - event: '[KCDC](http://www.kcdc.info)'
      date: 2016-06-23
    - event: "[BeMyApp
        webinar](https://www.eventbrite.com/e/transform-your-code-like-optimus-\
        prime-asts-for-beginners-wkent-c-dodds-tickets-26281147620)"
      recording: https://youtu.be/WO7H2NHmN18
      date: 2016-06-06
  description: >-
    The Abstract Syntax Tree. It sounds a lot worse than it is. It's actually
    quite simple and enables some powerful tools. BabelJS uses it to transform
    your code from ES.Next to ES5. ESLint uses it to lint your code. And with a
    knowledge of how it works, you can extend these and other tools to do some
    mind bustingly powerful things. Prepare to be amazed by ASTs!

- title: The First Pull Request
  resources:
    - '[slides](http://slides.com/kentcdodds/1st-pr)'
  tags:
    - open source
    - soft skills
  deliveries:
    - event: "[Fluent
        Conf](http://conferences.oreilly.com/fluent/javascript-html-us/public/s\
        chedule/detail/46612)"
      recording: https://youtu.be/HjgZQeMrw6c
      date: 2016-03-09
  description: >-
    "Feel free to submit a pull request." For some, this is a welcome
    invitation, but for many developers, pull requests are intimidating,
    discouraging them from contributing to the community. Kent Dodds
    demonstrates how easy and fun it is to create a pull request as a first
    timer.


    To open source newcomers: You, open source newcomer, can be a valuable
    contributor to the open source community. We need you here. We want your
    input and contributions. But getting over that initial hump of contributing
    can be a real challenge. I call this the first-timer's dilemma. You want to
    contribute, but you don't know how, or you're afraid your pull request (PR)
    won't get merged. You'll learn that it's less frightening and easier to get
    started than you think, as you become familiar with the common patterns and
    processes you need to understand in order to contribute to an open source
    project.


    To open source project maintainers: You, open source project maintainer, are
    the lifeblood of the open source community. Developers power open source.
    The more people finding, reporting, and fixing bugs or adding/removing
    features the better. You have the power to help newcomers overcome the
    first-timer's dilemma. You'll see what challenges first-timers often face
    and how with just a few extra minutes of your time, you can help tear down
    these barriers and make your project more friendly to contributors
    (including first-timers).


    Whether you'e new to open source or a pro, Kent will help you as we strive
    to make the open source community more open and friendly.

- title: What we can learn about testing from the wheel
  resources:
    - "[slides](https://drive.google.com/file/d/0BxZDtibcRzVWNFU3VXM2RzJ1SG8/vi\
      ew?usp=sharing)"
  tags:
    - testing
    - lightning
  deliveries:
    - event: "[Ignite
        Fluent](http://conferences.oreilly.com/fluent/javascript-html-us/public\
        /schedule/detail/48271)"
      recording: https://youtu.be/Da9wfQ0frGA?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
      date: 2016-03-08
  description: >-
    Knowing what and how to test is almost more difficult than actually writing
    the test. If you write only end-to-end tests, you'll struggle with
    reliability and speed. If you write only unit tests, you'll struggle with
    surprising bugs integrating things together. In this ignite talk, we'll take
    these concepts away from code for a moment to see how we would test a wheel.
    Prepare for an enlightening, entertaining 5 minutes 😀.

- title: 'Zero to 60 in software development: How to jumpstart your career'
  resources:
    - '[slides](https://slides.com/kentcdodds/zero-to-60)'
  tags:
    - soft skills
  deliveries:
    - event: '[Foward 4 Web Summit](http://forwardjs.com)'
      recording: https://youtu.be/-qPh6I2hfjw?list=PLV5CVI1eNcJgNqzNwcs4UKrlJdhfDjshf
      date: 2016-02-11
    - event: '[BYU AIS club](http://ais.byu.edu) Value Added Forum'
      date: 2016-10-13
  description: >-
    Our industry has a problem. We have a "talent shortage," so we're loading
    the industry with new developers from various bootcamps, but they're having
    trouble finding jobs because many companies are unwilling to hire and train
    them. So these new developers are left to themselves to try and find ways to
    develop the skills they need to be "marketable."


    I graduated from college in April 2014, just shy of two years ago. In that
    time, I've been able to learn a ton, build a bunch of stuff, teach
    workshops, create egghead screencasts, speak at conferences, and generally
    contribute quite a bit to the JavaScript community. In this talk, I'll cover
    some solid principles of things that I've learned in my experience. This
    will help new-comers to jumpstart their career. And help old-timers know how
    they can help new-comers.

- title: Learning JavaScript and Staying Marketable
  resources:
    - '[slides](http://slides.com/kentcdodds/learning-javascript)'
    - '[tweet](https://twitter.com/ngnebraska/status/669319695015673856)'
  tags:
    - soft skills
  deliveries:
    - event:
        '[ng-nebraska meetup
        November](http://www.meetup.com/ng-nebraska/events/226632455)'
      date: 2015-11-24
  description: >-
    Angular is amazing and has contributed to a major change in the landscape of
    frontend web development forever. But frameworks come and go. Even though
    Angular 1.x will still be around for a few years, it will eventually be
    totally antiquated and you'll need to show off other kinds of skills to
    attract employers. What if there were a way that you could learn skills you
    need to both be effective Angular developers today and develop skills that
    will make you marketable for many more years to come? Spoiler, I'm talking
    about JavaScript. Let's go over why that's important and a few ways to
    accomplish this.

- title: ES6, Webpack, Karma, and Code Coverage
  resources:
    - '[repo](https://github.com/kentcdodds/random-user-coverage)'
  tags:
    - babel
    - testing
    - webpack
    - live coding
  deliveries:
    - event: '[UtahJS meetup](http://www.meetup.com/UtahJS/events/222630472)'
      recording: https://youtu.be/P-1ZZkpEmQA
      date: 2015-06-16
  description: Setting up test coverage reporting with ES6 and Karma
- title: 'Angular Directive Scope: Explained and Code Structure'
  resources:
    - '[blog post](https://medium.com/@kentcdodds/19eee9e90e45)'
  deliveries:
    - event:
        '[AngularJS Utah
        meetup](http://www.meetup.com/AngularJS-Utah/events/222511910)'
      recording: https://youtu.be/ii7J-k661Zg
      date: 2015-05-28
- title: ES6
  resources:
    - '[repo](https://github.com/kentcdodds/es6-workshop)'
  deliveries:
    - event:
        '[SLC JS Learners
        meetup](http://www.meetup.com/SLC-JS-Learners/events/220770922)'
      recording: https://youtu.be/_Pn32tTtbuQ
      date: 2015-04-21
  description: >-
    Kent C. Dodds is going to be introducing ECMAScript 6, which is the next
    version of JavaScript. If you want to look ahead, check this out:
    [github.com/lukehoban/es6features](https://github.com/lukehoban/es6features)

- title: 'Moxee: Enforcing modularity in AngularJS'
  resources:
    - '[slides](http://slides.com/kentcdodds/moxee#)'
    - '[repo](https://github.com/alianza-dev/moxee)'
  deliveries:
    - event:
        '[AngularJS Utah
        meetup](http://www.meetup.com/AngularJS-Utah/events/221087489)'
      date: 2015-03-26
  description: >-
    Moxee will create tests for you which will ensure that no injectable
    function is requiring anything that the module doesn't provide on its own
    (or via one of its dependencies).

- title: JSON powered Forms
  resources:
    - '[slides](http://slides.com/kentcdodds/angular-formly)'
    - '[repo](https://github.com/kentcdodds/angular-formly-convert)'
  deliveries:
    - event: '[ng-nl](http://www.ng-nl.org)'
      recording: https://youtu.be/o90TMDL3OYc
      date: 2015-02-13
    - event: '[MidwestJS](http://midwestjs.com)'
      recording: https://youtu.be/jUX2zcSwbRE
      date: 2015-08-13
  description: >-
    We're all really tired of writing the same code for every form. You need a
    label here and an input here and make sure their IDs are the same and unique
    and now you want me to add validation!? Daah! I got fed up with this pretty
    quick and found that I enjoy writing JavaScript a lot more than repeating
    myself with HTML. If you're like me, then you'll love angular-formly. In
    this talk, we'll see how you can very easily represent your model with a
    form using a few lines of JavaScript. You want validation, conditional
    fields, or custom templates? You need to react to changes to a field? Piece
    of cake. So come on, and let's make fields less painful and more delightful.

- title: 'Angular 2: Built for Huge, Long-lasting Applications'
  resources:
    - '[slides](http://slides.com/kentcdodds/ng2-introduction)'
    - '[repo](https://github.com/kentcdodds/ng2-random-user)'
  deliveries:
    - event:
        '[Philly
        ETE](http://phillyemergingtech.com/sessions/angularjs-2-0-leveling-up)'
      recording: http://www.infoq.com/presentations/angularjs-2
      date: 2015-04-08
  description: >-
    Angular 2 is built for huge web applications that stand the test of time. To
    accomplish this, Angular 2 utilizes the latest and greatest web technologies
    like ES6 modules/classes and Web Components. Come get a preview of what this
    looks like with egghead.io instructor Kent C. Dodds as he live codes an
    application using the pre-release alpha version of Angular 2.

- title: ng-model-options in 5 minutes
  resources:
    - '[slides](http://slides.com/kentcdodds/ng-model-options-in-5-minutes#)'
    - '[JSBin](http://jsbin.com/qocekak/edit)'
    - "[blog
      post](https://www.airpair.com/angularjs/posts/ngmodeloptions-total-model-\
      control)"
  deliveries:
    - event: '[ng-conf](http://www.ng-conf.org)'
      recording: https://youtu.be/k3t3ov6xHDw
      date: 2015-03-06
  description: >-
    Angular 1.3 brought a sweet new directive to the table called
    ng-model-options. It gives you more control over how your model gets updated
    and is very easy to use. Get a quick intro and start using this today!

- title: Using ReactJS with existing AngularJS codebase
  resources:
    - '[app](http://kentcdodds.com/react-in-angular/app)'
    - '[repo](https://github.com/kentcdodds/react-in-angular)'
  deliveries:
    - event: '[Jfokus](http://www.jfokus.se/jfokus)'
      recording: https://youtu.be/AiE4ajXh7dY
      date: 2015-02-04
    - event:
        '[ReactJS Utah meetup
        January](http://www.meetup.com/ReactJS-Utah/events/219204576)'
      recording: https://youtu.be/AiE4ajXh7dY
      date: 2015-01-27
  description: >-
    ReactJS is an amazing View library that promises (and delivers) high
    performance, composability, and maintainability. AngularJS is an amazing MV*
    framework. Tons of shops have adopted and totally bought into AngularJS for
    their entire frontend application. They're loving it, but some are finding
    that as these applications get bigger, they can become unwieldy,
    unperformant, and difficult to reason about. Many of these problems can be
    solved by doing things better with angular, but not all of them.


    In this talk, we'll go over why you don't need to re-write your whole
    application to get some of the wins of React and that it actually is quite
    easy to integrate the two. We'll talk about where it makes sense to bring in
    React to an existing Angular codebase and how it works well.

- title: Improving UX with GenieJS
  resources:
    - '[slides](https://slides.com/kentcdodds/genie)'
    - '[workshop](https://kentcdodds.github.io/genie/workshop)'
  deliveries:
    - event: '[MidwestJS](http://midwestjs.com)'
      recording: https://youtu.be/lqf5mrrf4ZY
      date: 2014-08-14
    - event:
        '[UtahJS Orem
        meetup](http://www.meetup.com/UtahJS-Orem-Meetup/events/156148202)'
      date: 2014-02-06
  description: >-
    I believe that people are so much more productive when they don't need to
    use the mouse to click on something. One implementation intended to help
    with this is keyboard shortcuts. Unfortunately, these are limited to the
    number of sensible keys and key combinations and can be difficult for users
    to discover, remember, and use. Normally, only super users will ever use
    them. The goal of genie is to address the problems with keyboard
    combinations.


    Genie is a simple library to emulate the same kind of behavior seen in apps
    like Alfred (for macOS: [alfredapp.com](https://alfredapp.com)).
    Essentially, you register actions associated with keywords. Then you can
    request the genie to perform that action based on the best keyword match for
    a given keyword. This allows a user to type what they want to have happen
    and select from a list of the best matches for what they typed to perform an
    action. Over time, the genie will learn the actions more associated with
    specific keywords and those will be come first when a list of matching
    actions is requested. Check it out at
    [github.com/kentcdodds/genie](https://github.com/kentcdodds/genie)

- title: Watch your Watchers
  resources:
    - '[slides](http://slides.com/kentcdodds/angular-bindonce#)'
    - '[kcd-angular](http://kentcdodds.com/kcd-angular)'
  deliveries:
    - event:
        '[AngularJS Utah
        meetup](http://www.meetup.com/AngularJS-Utah/events/184204692)'
      recording: https://youtu.be/hFOSXVT-Cps?t=1m34s
      date: 2014-08-12
  description: >-
    If you're not careful (especially with your ng-repeats) your watch count in
    your app can grow pretty quick. This isn't a problem itself, but its what
    that does to your digest cycle. Lots of watchers makes your digest cycle
    take longer. In my talk, we'll talk about what Angular 1.3 is doing to help
    solve this problem, the problem their solution presents, a solution to that
    problem, and what can be done for pre-Angular 1.3 code.

- title: Sharing code between Ionic and Web Angular Apps
  deliveries:
    - event:
        '[AngularJS Utah
        meetup](http://www.meetup.com/AngularJS-Utah/events/160366932)'
      recording: https://youtu.be/EmWBbvWJDVY
      date: 2014-08-08
  description:
    This was an impromptu talk while we were waiting for the actual speakers to
    come, so I'm not on the schedule.

- title: How to Build a Demo with GitHub Pages
  resources:
    - '[slides](http://slides.com/kentcdodds/gh-pages#)'
  deliveries:
    - event:
        '[UtahJS Orem
        meetup](http://www.meetup.com/UtahJS-Orem-Meetup/events/193499152)'
      date: 2014-08-07

- title: "JWT: Not Your Grandma's Cookies"
  resources:
    - '[slides](http://slides.com/kentcdodds/ng-jwt-workshop)'
    - '[site](http://kentcdodds.com/ng-jwt-workshop/frontend)'
    - '[repo](https://github.com/kentcdodds/ng-jwt-workshop)'
  deliveries:
    - event:
        '[AngularJS Utah
        meetup](http://www.meetup.com/AngularJS-Utah/events/173788512)'
      recording: https://youtu.be/vIGZxeQUUFU?t=1m51s
      date: 2014-06-10
  description: >-
    Cookies and sessions are the traditional way to keep track of user state on
    the server, but it can bite you later. JSON Web Tokens (JWT) is a stateless
    way to deal with users. I'll show how to use `$httpInterceptors` to make
    this easy as pie. :-)

- title: Intro to AngularJS
  resources:
    - '[slides](https://slides.com/kentcdodds/intro-to-angularjs)'
    - '[workshop](http://kentcdodds.com/ng-workshop)'
  deliveries:
    - event: To my classmates at BYU
      recording: https://youtu.be/GmVUw_Efi_M
      date: 2014-01-30
    - event: '[UtahJS](http://conf.utahjs.com/schedule-2014)'
      date: 2014-06-06
    - event: '[Jfokus](http://www.jfokus.se/jfokus)'
      date: 2015-02-03
  description: >-
    AngularJS is one of the most popular frontend frameworks out there right
    now. If you haven't tried it yet, prepare to be amazed! Here's what we'll
    cover:

    1. Templates/Expressions - Your View

    2. Module - Your app's namespace

    3. Directives - DOM Interface

    4. Filters - Display utils

    5. Scope - What on earth is this thing!?

    6. Controllers - The View Model

    7. Services - Common utilities

    8. Working with third-party modules

    9. Routing - Single Page App with state in the URL

    10. Firebase & AngularFire - A full web application with no server setup
    required!


    We'll be following through a repository hosted on GitHub. There's a branch
    for each concept, so you can play around with the code and then catch right
    back up with the next branch. So come on, and let's learn AngularJS!
