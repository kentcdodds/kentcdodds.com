name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  # changes:
  #   name: 🔎 Determine deployable changes
  #   runs-on: ubuntu-latest
  #   outputs:
  #     DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: '50'

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: 🔎 Determine deployable changes
  #       id: changes
  #       run: >-
  #         echo ::set-output name=DEPLOYABLE::$(node ./other/is-deployable.js ${{
  #         github.sha }})

  #     - name: ❓ Deployable
  #       run: >-
  #         echo "DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}"

  # lint:
  #   name: ⬣ ESLint
  #   needs: [changes]
  #   if: needs.changes.outputs.DEPLOYABLE == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v2

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1

  #     - name: 🔬 Lint
  #       run: npm run lint

  # typecheck:
  #   name: ʦ TypeScript
  #   needs: [changes]
  #   if: needs.changes.outputs.DEPLOYABLE == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v2

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1

  #     - name: 🔎 Type check
  #       run: npm run typecheck

  # jest:
  #   name: 🃏 Jest
  #   needs: [changes]
  #   if: needs.changes.outputs.DEPLOYABLE == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v2

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1

  #     - name: 🃏 Run jest
  #       run: npm run test -- --coverage

  # TODO: fix playwright
  # playwright:
  #   name: 🎭 Playwright
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.10.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: 🏄 Copy test env vars
  #       run: cp .env.example .env

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: 🎬 Setup ffmpeg
  #       uses: FedericoCarboni/setup-ffmpeg@v1

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1
  #       with:
  #         useLockFile: false

  #     - name: 🌐 Install Playwright Browsers
  #       run: npx playwright install chromium --with-deps

  #     - name: 🛠 Setup Database
  #       run: npx prisma migrate reset --force

  #     - name: 🏗 Build
  #       run: npm run build

  #     - name: 🏦 Prime Site Cache
  #       id: site-cache
  #       uses: actions/cache@v3
  #       with:
  #         path: other/cache.db
  #         key: site-cache

  #     - name: 😅 Generate Site Cache
  #       if: steps.site-cache.outputs.cache-hit != 'true'
  #       run: npm run prime-cache:mocks

  #     - name: 🎭 Playwright tests
  #       run: npx playwright test
  #       env:
  #         PORT: 8811

  #     - name: 📊 Upload report
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  build:
    name: 🐳 Build
    # needs: [changes]
    if:
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}
    # if:
    #   ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
    #   github.event_name == 'push' && needs.changes.outputs.DEPLOYABLE == 'true'
    #   }}
    runs-on: ubuntu-latest
    # only build/deploy main branch on pushes
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags:
            registry.fly.io/${{ steps.app_name.outputs.value }}:${{
            github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [build]
    # needs: [changes, lint, typecheck, jest, build]
    # only build/deploy main branch on pushes
    if:
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}
    # if:
    #   ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
    #   github.event_name == 'push' && needs.changes.outputs.DEPLOYABLE == 'true'
    #   }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args:
            'deploy --app ${{ steps.app_name.outputs.value }}-staging --image
            registry.fly.io/${{ steps.app_name.outputs.value }}:${{
            github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args:
            'deploy --image registry.fly.io/${{ steps.app_name.outputs.value
            }}:${{ github.ref_name }}-${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
