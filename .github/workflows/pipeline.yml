name: pipeline
on:
  push:
    branches:
      - main
  pull_request: {}

env:
  REMIX_TOKEN: ${{ secrets.REMIX_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck

  jest:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🃏 Run jest
        run: npm run test -- --coverage

  test:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: ⚙️ Build
        run: npm run build
        env:
          ENABLE_TEST_ROUTES: 'true'
          COMMIT_SHA: ${{github.sha}}

      - name: 🐳 Docker compose
        run: docker-compose up -d && sleep 3 && npx prisma migrate reset --force
        env:
          DATABASE_URL: 'postgresql://kody:the_koala@localhost:5432/kentcdodds_db?schema=public'

      - name: ⚡️ Prime cache
        run: npm run prime-cache:mocks

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          start: npm run start:mocks
          wait-on: 'http://localhost:8811'
        env:
          PORT: '8811'
          RUNNING_E2E: 'true'
          DATABASE_URL: 'postgresql://kody:the_koala@localhost:5432/kentcdodds_db?schema=public'

  build:
    runs-on: ubuntu-latest
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: registry.fly.io/withered-frost-3196:${{ github.sha }}
          build-args: REMIX_TOKEN=${{secrets.REMIX_TOKEN}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, typecheck, jest, test, build]
    # only build/deploy main branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 🚀 Deploy
        uses: superfly/flyctl-actions@1.1
        with:
          args:
            'deploy -i registry.fly.io/withered-frost-3196:${{ github.sha }}
            --strategy bluegreen'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
