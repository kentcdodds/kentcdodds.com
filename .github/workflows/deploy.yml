name: deploy
on:
  push:
    branches: ['main', '!all-contributors/**']
  pull_request:
    branches-ignore: ['all-contributors/**']

env:
  REMIX_TOKEN: ${{ secrets.REMIX_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v2
        env:
          cache-name: cache-docker-layers
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: /var/lib/docker
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: üèÑ Copy test env vars
        run: cp .env.example .env

      - name: ‚éî Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: ‚ñ∂Ô∏è Run validate script
        run: npx kcd-scripts validate
        env:
          ENABLE_TEST_ROUTES: 'true'

      - name: üê≥ Docker compose
        run: docker-compose up -d && sleep 3 && npx prisma migrate reset --force
        env:
          DATABASE_URL: 'postgresql://kody:the_koala@localhost:5432/kentcdodds_db?schema=public'

      - name: ‚ö°Ô∏è Prime cache
        run: npm run prime-cache:mocks

      - name: üå≥ Cypress run
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          start: npm run start:mocks
          wait-on: 'http://localhost:8811'
        env:
          PORT: '8811'
          RUNNING_E2E: 'true'
          DATABASE_URL: 'postgresql://kody:the_koala@localhost:5432/kentcdodds_db?schema=public'

      - name: üê≥ Docker build
        run: docker build . -t kcd-remix --build-arg REMIX_TOKEN=${{ secrets.REMIX_TOKEN }}
        env:
          REMIX_TOKEN: ${{ secrets.REMIX_TOKEN }}

      - name: üöÄ Deploy
        # only deploy main branch on pushes
        if:
          ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: superfly/flyctl-actions@1.1
        with:
          args:
            'deploy --build-arg REMIX_TOKEN=${{ secrets.REMIX_TOKEN }}
            --build-arg COMMIT_SHA="${{ github.sha }}"'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
